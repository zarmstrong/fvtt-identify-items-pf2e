{"name":"Identify Items","permission":{"default":0,"2FHUfmxigXEfscQX":3},"type":"script","flags":{"core":{"sourceId":"Macro.MEhzg3FdrdaNWLUx"}},"scope":"global","command":"function runDialog(dialog, height, width) {\n    if (height) {\n        dialog.options.height = height;\n        dialog.position.height = height;\n    }\n    if (width) {\n        dialog.options.width = width;\n        dialog.position.width = width;\n    }\n    dialog.render(true);\n}\n\nfunction identifyItem(skill, dc, item) {\n    let skillValue, skillName;\n    switch (skill) {\n        case \"arc\":\n            skillValue = actor.data.data.skills.arc.value;\n            skillName = \"Arcana\";\n            break;\n        case \"rel\":\n            skillValue = actor.data.data.skills.rel.value;\n            skillName = \"Religion\";\n            break;\n        case \"occ\":\n            skillValue = actor.data.data.skills.occ.value;\n            skillName = \"Occultism\";\n            break;\n        case \"nat\":\n            skillValue = actor.data.data.skills.nat.value;\n            skillName = \"Nature\";\n            break;\n    }\n    const actorName=ChatMessage.getSpeaker({ actor: context.actor });\n    const roll = new Roll(`1d20 + ${skillValue}`, actor.getRollData()).roll();\n    roll.toMessage({\n        speaker: actorName,\n        flavor: `${actor.name} is trying to identify item <strong>${item.data.identification.identified.name}</strong> with <strong>${skillName}</strong> and the <strong>DC: ${dc}</strong>:`\n    }, {\n        rollMode: 'blindroll'\n    });\n}\n\nfunction showIDOptions(html) {\n    let magicItemID = html.find(\"#itemID\")[0].value;\n    const thisItem = (actor.data.items).filter(item => item._id === magicItemID);\n    const traits = thisItem[0].data.traits.value;\n    const itemLevel = thisItem[0].data.level.value;\n    const itemRarity = thisItem[0].data.traits.rarity.value;\n    let IDDC = 0;\n    let isArcane = false,\n        isDivine = false,\n        isPrimal = false,\n        isOccult = false,\n        isMagical = false,\n        isAlchemical = false;\n    if (traits.includes('magical'))\n        isMagical = true;\n    if (traits.includes('arcane'))\n        isArcane = true;\n    if (traits.includes('divine'))\n        isDivine = true;\n    if (traits.includes('occult'))\n        isOccult = true;\n    if (traits.includes('primal'))\n        isPrimal = true;\n    if (traits.includes('alchemical'))\n        isAlchemical = true;\n    if (itemRarity == \"uncommon\")\n        IDDC += 2\n    else if (itemRarity == \"rare\")\n        IDDC += 5\n    else if (itemRarity == \"unique\")\n        IDDC += 10\n    if (itemLevel == 0)\n        IDDC += 14;\n    if (itemLevel == 1)\n        IDDC += 15;\n    if (itemLevel == 2)\n        IDDC += 16;\n    if (itemLevel == 3)\n        IDDC += 18;\n    if (itemLevel == 4)\n        IDDC += 19;\n    if (itemLevel == 5)\n        IDDC += 20;\n    if (itemLevel == 6)\n        IDDC += 22;\n    if (itemLevel == 7)\n        IDDC += 23;\n    if (itemLevel == 8)\n        IDDC += 24;\n    if (itemLevel == 9)\n        IDDC += 26;\n    if (itemLevel == 10)\n        IDDC += 27;\n    if (itemLevel == 11)\n        IDDC += 28;\n    if (itemLevel == 12)\n        IDDC += 30;\n    if (itemLevel == 13)\n        IDDC += 31;\n    if (itemLevel == 14)\n        IDDC += 32;\n    if (itemLevel == 15)\n        IDDC += 34;\n    if (itemLevel == 16)\n        IDDC += 35;\n    if (itemLevel == 17)\n        IDDC += 36;\n    if (itemLevel == 18)\n        IDDC += 38;\n    if (itemLevel == 19)\n        IDDC += 39;\n    if (itemLevel == 20)\n        IDDC += 40;\n    if (itemLevel == 21)\n        IDDC += 42;\n    if (itemLevel == 22)\n        IDDC += 44;\n    if (itemLevel == 23)\n        IDDC += 46;\n    if (itemLevel == 24)\n        IDDC += 48;\n    if (itemLevel == 25)\n        IDDC += 50;\n\n    let content = \"\"\n    let arcaneDC, occultDC, primalDC, divineDC;\n    let d = {\n        title: \"Item Identification\",\n        content: \"\",\n        buttons: {},\n    }\n\n    if (isMagical) {\n        content += '<h1>Identify Magic Skills</h1>';\n        content += \"<table><tbody>\";\n        if (actor.data.data.skills.arc.rank) {\n            content += \"<tr><td>Arcana</td><td>\";\n            if (isArcane) {\n                content += \"Easy\";\n                arcaneDC = IDDC;\n            } else {\n                content += \"Standard\";\n                arcaneDC = IDDC + 5;\n            }\n            content += \"</td></tr>\";\n            let arcaneButton = {\n                buttons: {\n                    Arcana: {\n                        icon: \"<i class='fas fa-hat-wizard'></i>\",\n                        label: \"Use Arcana\",\n                        callback: (html) => identifyItem('arc', arcaneDC, thisItem[0]),\n                    },\n                }\n            }\n            mergeDeep(d, arcaneButton);\n        }\n        if (actor.data.data.skills.nat.rank) {\n            content += \"<tr><td>Nature</td><td>\";\n            if (isPrimal) {\n                content += \"Easy\";\n                primalDC = IDDC;\n            } else {\n                content += \"Standard\";\n                primalDC = IDDC + 5;\n            }\n            content += \"</td></tr>\";\n            let natureButton = {\n                buttons: {\n                    Nature: {\n                        icon: \"<i class='fas fa-leaf'></i>\",\n                        label: \"Use Nature\",\n                        callback: (html) => identifyItem('nat', primalDC, thisItem[0]),\n                    },\n                }\n            }\n            mergeDeep(d, natureButton);\n        }\n        if (actor.data.data.skills.occ.rank) {\n            content += \"<tr><td>Occult</td><td>\";\n            if (isOccult) {\n                content += \"Easy\";\n                occultDC = IDDC;\n            } else {\n                content += \"Standard\";\n                occultDC = IDDC + 5;\n            }\n            content += \"</td></tr>\";\n            let occultButton = {\n                buttons: {\n                    Occult: {\n                        icon: \"<i class='fas fa-magic'></i>\",\n                        label: \"Use Occultism\",\n                        callback: (html) => identifyItem('occ', occultDC, thisItem[0]),\n                    },\n                }\n            }\n            mergeDeep(d, occultButton);\n        }\n        if (actor.data.data.skills.rel.rank) {\n            content += \"<tr><td>Religion</td><td>\";\n            if (isDivine) {\n                content += \"Easy\";\n                divineDC = IDDC;\n            } else {\n                content += \"Standard\";\n                divineDC = IDDC + 5;\n            }\n            content += \"</td></tr>\";\n            let religionButton = {\n                buttons: {\n                    Religion: {\n                        icon: \"<i class='fas fa-cross'></i>\",\n                        label: \"Use Religion\",\n                        callback: (html) => identifyItem('rel', divineDC, thisItem[0]),\n                    },\n                }\n            }\n            mergeDeep(d, religionButton);\n        }\n        content += \"</tbody></table>\";\n    } else {\n        content += '<h1>Identify</h1>';\n        const alchemicalTools = (actor.data.items).filter(item => item.name.includes(\"Alchemist's Tools\"))\n        if (alchemicalTools.length > 0) {\n            content += \"<table><tbody>\";\n            content += \"<tr><td>Crafting</td><td>\";\n            content += \"Standard\";\n            arcaneDC = IDDC + 5;\n            content += \"</td></tr>\";\n            content += \"</tbody></table>\";\n            let craftButton = {\n                buttons: {\n                    Arcana: {\n                        icon: \"<i class='fas fa-hammer'></i>\",\n                        label: \"Use Crafting\",\n                        callback: (html) => identifyItem('arc', arcaneDC, thisItem[0]),\n                    },\n                }\n            }\n            mergeDeep(d, craftButton);\n        } else {\n            content += \"Unfortunately you do not have Alchemist's Tools and cannot identify this item.\";\n        }\n    }\n    let contentD = {\n        content: content,\n    }\n    mergeDeep(d, contentD)\n    let newD = new Dialog(d)\n    runDialog(newD, null, 600);\n}\n\nif (actor.data.type == \"character\") {\n    const allItems = (actor.data.items).filter(item => item.name.includes(\"Unidentified\"))\n    let content = `<div style=\"padding: 5px 0\"><label for=\"level\">What item are you identifying?</label>\n    <select name=\"itemID\" id=\"itemID\">`\n    for (let i = 0; i <= allItems.length - 1; i++)\n        content += `<option value=\"${allItems[i]._id}\">${allItems[i].name}</option>`\n\n    content += `</select></div></div>`\n\n    let d = new Dialog({\n        title: \"Item Identification\",\n        content: content,\n        buttons: {\n            Identify: {\n                icon: \"<i class='fas fa-magic'></i>\",\n                label: \"Identify Item\",\n                callback: (html) => showIDOptions(html),\n            }\n        },\n    })\n    runDialog(d, null, 300);\n}\n\n/**\n * Performs a deep merge of `source` into `target`.\n * Mutates `target` only but not its objects and arrays.\n *\n * @author inspired by [jhildenbiddle](https://stackoverflow.com/a/48218209).\n */\nfunction mergeDeep(target, source) {\n    const isObject = (obj) => obj && typeof obj === 'object';\n\n    if (!isObject(target) || !isObject(source)) {\n        return source;\n    }\n\n    Object.keys(source).forEach(key => {\n        const targetValue = target[key];\n        const sourceValue = source[key];\n\n        if (Array.isArray(targetValue) && Array.isArray(sourceValue)) {\n            target[key] = targetValue.concat(sourceValue);\n        } else if (isObject(targetValue) && isObject(sourceValue)) {\n            target[key] = mergeDeep(Object.assign({}, targetValue), sourceValue);\n        } else {\n            target[key] = sourceValue;\n        }\n    });\n\n    return target;\n}","author":"2FHUfmxigXEfscQX","img":"modules/identify-items-pf2e/icons/magnifier.svg","actorIds":[],"_id":"4adgwKdiMoJc2v5e"}